# Configuration metadata for device-specific JSON file merging
# This file defines which JSON configuration files should be managed
# with device-specific field preservation

# Global settings for all managed configurations
global:
  # Maximum number of backup files to keep (default: 5)
  max_backups: 5

managed_configs:
  # Cursor IDE Settings
  cursor_settings:
    template: "dot_cursor/settings.json.tmpl"
    destination:
      darwin: "Library/Application Support/Cursor/User/settings.json"
      linux: ".config/Cursor/User/settings.json"
    preserve_fields:
      # Preserve user-specific theme and UI preferences
      - "workbench.colorTheme"
      - "window.zoomLevel"
      - "editor.fontSize"
      - "terminal.integrated.fontSize"
      # Preserve any manually configured extensions settings
      - "extensions.*"
    merge_strategy: "shallow"
    description: "Cursor IDE settings with device-specific UI preferences"
    max_backups: 3  # Cursor settings change frequently, keep fewer backups
    
  # Cursor MCP Configuration  
  cursor_mcp:
    template: "dot_cursor/mcp.json.tmpl"
    destination: ".cursor/mcp.json"
    preserve_fields: []
    merge_strategy: "shallow"
    template_priority: true  # Template always wins - fully managed config
    description: "Cursor MCP server configuration - fully managed"
    
  # Claude Code Settings
  claude_settings:
    template: "dot_claude/settings.json.tmpl"
    destination: ".claude/settings.json"
    preserve_fields:
      # Device-specific model preference
      - "model"
      # Device-specific survey state
      - "feedbackSurveyState"
      # Any custom per-device settings
      - "customSettings"
    merge_strategy: "shallow"
    description: "Claude Code settings with device-specific model preferences"

  # Zed Editor Settings  
  zed_settings:
    template: "dot_config/zed/private_settings.json.tmpl"
    destination: ".config/zed/settings.json"
    preserve_fields:
      # Device-specific UI preferences (changeable via settings UI)
      - "ui_font_size"
      - "buffer_font_size" 
      - "theme"
      # Device-specific context server configurations
      - "context_servers"
      # Device-specific agent/model preferences (changeable via chat UI dropdown)
      - "agent"
      # Other UI-driven settings that may change dynamically
      - "features"
      - "icon_theme"
    merge_strategy: "shallow"  
    description: "Zed editor settings with device-specific font, theme and service preferences"
    max_backups: 7  # Zed settings change less often, keep more backups for safety

# Merge strategy options:
# - "shallow": Object.assign-like merge
#   Use when: Most configurations, simple key-value overrides
#   Behavior: By default existing top-level fields override template fields
#   With template_priority: true, template fields override existing fields
#
# - "deep": Recursive merge preserving nested structures  
#   Use when: Complex nested objects where you want template updates to flow through
#   Behavior: By default recursively merges objects, existing values override at all levels
#   With template_priority: true, template values override existing at all levels
#   Example: Template adds new nested setting, existing nested settings preserved
#
# Template priority modifier:
# - template_priority: true|false (default: false)
#   When true: Template values override existing file values
#   When false: Existing file values override template values (preserve user changes)
#   Use true for fully managed configs with no device-specific settings
#
# Preserve fields support:
# - Simple field names: "model", "fontSize"
# - Nested paths: "feedbackSurveyState.lastShownTime"  
# - Wildcards: "extensions.*", "context_servers.*.settings"
#
# Note: preserve_fields is informational only in current implementation
# The merge strategies naturally preserve existing values
#
# Backup configuration:
# - max_backups: Number of backup files to keep (default: global.max_backups or 5)
# - Backups are created automatically when invalid JSON is detected
# - Format: originalfile.backup.timestamp
# - Rotation removes oldest backups when limit is exceeded
#
# Dry-run mode support:
# - Use 'chezmoi apply --dry-run' to preview changes without applying
# - All file modifications are skipped in dry-run mode
# - Shows diffs of proposed changes
# - Backup operations are previewed but not executed
# - Use '--verbose' flag for detailed logging
