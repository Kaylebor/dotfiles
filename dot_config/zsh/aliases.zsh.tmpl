alias q="exit"
{{- if eq .chezmoi.os "darwin" }}
alias o="open"
{{- else }}
alias o="xdg-open"
{{- end }}
{{- if lookPath "rg" }}
ALIASED_RG_OPTS='-P'
rg() {
  case $TERM_PROGRAM in
    *zed*)
      command rg $ALIASED_RG_OPTS --no-heading --line-number --column --with-filename "$@"
      ;;
    *)
      command rg $ALIASED_RG_OPTS "$@"
      ;;
  esac
}
{{- end }}
{{- if lookPath "clipboard" }}
alias cb="clipboard"
{{- end }}
{{- if lookPath "bat" }}
alias cat="bat"
{{- end }}
{{- if lookPath "difft" }}
alias diff="difft"
{{- end }}
{{- if lookPath "lima" }}
alias nerdctl="lima nerdctl"
{{- end }}
{{- if lookPath "eza" }}
# Override ls with eza without hyperlinks to prevent terminal formatting issues
alias ls='eza --smart-group --header --group-directories-first --time-style=long-iso --icons=always'

# Eza aliases (matching fish-eza plugin)
alias l='eza --icons=auto'
alias lo='eza --icons=auto --oneline'

# Long format with automatic git detection
alias ll='eza --icons=auto --long --group $(git rev-parse --git-dir &>/dev/null && echo "--git")'
alias lla='eza --icons=auto --long --all --group $(git rev-parse --git-dir &>/dev/null && echo "--git")'
alias lld='eza --icons=auto --long --group --only-dirs $(git rev-parse --git-dir &>/dev/null && echo "--git")'
alias llad='eza --icons=auto --long --all --group --only-dirs $(git rev-parse --git-dir &>/dev/null && echo "--git")'

# Git-aware long format (always shows git status)
alias lg='eza --icons=auto --long --git'
alias lga='eza --icons=auto --long --all --git'
alias lgd='eza --icons=auto --long --git --only-dirs'
alias lgad='eza --icons=auto --long --all --git --only-dirs'

# Extended attributes
alias le='eza --icons=auto --long --extended'
alias lea='eza --icons=auto --long --all --extended'
alias led='eza --icons=auto --long --extended --only-dirs'
alias lead='eza --icons=auto --long --all --extended --only-dirs'

# Tree view
alias lt='eza --icons=auto --tree --level=3'
alias lta='eza --icons=auto --tree --all --level=3'
alias ltd='eza --icons=auto --tree --only-dirs --level=3'
alias ltad='eza --icons=auto --tree --all --only-dirs --level=3'
alias lt1='eza --icons=auto --tree --level=1'
alias lt2='eza --icons=auto --tree --level=2'
alias lt3='eza --icons=auto --tree --level=3'
alias lt4='eza --icons=auto --tree --level=4'

# Across (grid) view
alias lc='eza --icons=auto --across'
alias lca='eza --icons=auto --across --all'
alias lcd='eza --icons=auto --across --only-dirs'
alias lcad='eza --icons=auto --across --all --only-dirs'

# Specialized aliases
alias laa='eza --icons=auto --long --all --binary --header'
alias li='eza --icons=auto'
alias lia='eza --icons=auto --all'
alias lid='eza --icons=auto --only-dirs'
alias liad='eza --icons=auto --all --only-dirs'
{{- end }}
{{- if lookPath "bunx" }}
alias ccusage='bunx ccusage'
{{- end }}

# Shadow docker with a function that resolves and calls the real executables
docker() {
  local docker_path nerdctl_path lima_path

  docker_path="$(builtin type -P docker 2>/dev/null || true)"
  if [ -n "$docker_path" ]; then
    "$docker_path" "$@"
    return $?
  fi

  nerdctl_path="$(builtin type -P nerdctl 2>/dev/null || true)"
  if [ -n "$nerdctl_path" ]; then
    "$nerdctl_path" "$@"
    return $?
  fi

  lima_path="$(builtin type -P lima 2>/dev/null || true)"
  if [ -n "$lima_path" ] && "$lima_path" nerdctl version >/dev/null 2>&1; then
    "$lima_path" nerdctl "$@"
    return $?
  fi

  print -u2 "No container runtime found (docker, nerdctl, or lima nerdctl)."
  return 1
}
