# Nushell Configuration
# See https://www.nushell.sh/book/configuration.html

# Early PATH setup for Homebrew (macOS)
{{- if eq .chezmoi.os "darwin" }}
{{- if stat (joinPath .chezmoi.homeDir ".homebrew" "bin" "brew") }}
$env.PATH = ($env.PATH | split row (char esep) | prepend ["{{ .chezmoi.homeDir }}/.homebrew/sbin", "{{ .chezmoi.homeDir }}/.homebrew/bin"] | uniq)
{{- else if stat (joinPath .chezmoi.homeDir "homebrew" "bin" "brew") }}
$env.PATH = ($env.PATH | split row (char esep) | prepend ["{{ .chezmoi.homeDir }}/homebrew/sbin", "{{ .chezmoi.homeDir }}/homebrew/bin"] | uniq)
{{- else if stat "/opt/homebrew/bin/brew" }}
$env.PATH = ($env.PATH | split row (char esep) | prepend ["/opt/homebrew/sbin", "/opt/homebrew/bin"] | uniq)
{{- else if stat "/usr/local/bin/brew" }}
$env.PATH = ($env.PATH | split row (char esep) | prepend ["/usr/local/sbin", "/usr/local/bin"] | uniq)
{{- end }}
{{- end }}

# Core environment variables
$env.EDITOR = "{{ if lookPath "nvim" }}nvim{{ else if lookPath "vim" }}vim{{ else }}vi{{ end }}"
$env.VISUAL = $env.EDITOR
$env.PAGER = "{{ if lookPath "bat" }}bat --style=plain{{ else if lookPath "less" }}less -R{{ else }}more{{ end }}"
$env.LANG = "en_US.UTF-8"
$env.LC_ALL = "en_US.UTF-8"

# Path configuration
$env.PATH = ($env.PATH | split row (char esep) | prepend [
    "{{ .chezmoi.homeDir }}/.local/bin"
    "{{ .chezmoi.homeDir }}/bin"
    {{- if lookPath "mise" }}
    "{{ .chezmoi.homeDir }}/.local/share/mise/shims"
    {{- end }}
] | uniq)


# 1Password SSH Agent
{{- if not .skip1Password }}
{{- if eq .chezmoi.os "darwin" }}
$env.SSH_AUTH_SOCK = "{{ .chezmoi.homeDir }}/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
{{- else if eq .chezmoi.os "linux" }}
$env.SSH_AUTH_SOCK = "{{ .chezmoi.homeDir }}/.1password/agent.sock"
{{- end }}
{{- end }}

{{- if lookPath "gpg" }}
$env.GPG_TTY = (tty)
{{- end }}

# Carapace bridges for additional shell completions
{{- if lookPath "carapace" }}
$env.CARAPACE_BRIDGES = 'zsh,fish,bash'
{{- end }}

# Nushell Config
$env.config = {
    show_banner: false
    edit_mode: vi
    
    ls: {
        use_ls_colors: true
        clickable_links: true
    }
    
    table: {
        mode: rounded
        index_mode: always
        show_empty: true
    }
    
    history: {
        max_size: 100_000
        sync_on_enter: true
        file_format: "sqlite"
    }
    
    completions: {
        case_sensitive: false
        quick: true
        partial: true
        algorithm: "fuzzy"
        external: {
            enable: true
            max_results: 100
            completer: null
        }
    }
    
    cursor_shape: {
        vi_insert: line
        vi_normal: block
    }
    
    shell_integration: {
        osc2: true
        osc7: true
        osc8: true
        osc133: true
        osc633: true
    }
    
    buffer_editor: $env.EDITOR
    error_style: "fancy"
    render_right_prompt_on_last_line: false
    
    keybindings: [
        {
            name: completion_menu
            modifier: none
            keycode: tab
            mode: [emacs vi_normal vi_insert]
            event: {
                until: [
                    { send: menu name: completion_menu }
                    { send: menunext }
                    { edit: complete }
                ]
            }
        }
        {
            name: completion_previous_menu
            modifier: shift
            keycode: backtab
            mode: [emacs, vi_normal, vi_insert]
            event: { send: menuprevious }
        }
        {
            name: history_menu
            modifier: control
            keycode: char_r
            mode: [emacs, vi_insert, vi_normal]
            event: { send: menu name: history_menu }
        }
    ]
}

# Load Starship prompt (generated by run_before script)
{{- if lookPath "starship" }}
{{- $starshipInit := joinPath .chezmoi.homeDir ".local/share/nushell/vendor/autoload/starship.nu" }}
use "{{ $starshipInit }}"
{{- end }}

# Load Carapace completions (generated by run_before script)
{{- $carapaceInit := joinPath .chezmoi.homeDir ".cache/carapace/init.nu" }}
{{- if and (lookPath "carapace") (stat $carapaceInit) }}
source "{{ $carapaceInit }}"
{{- end }}

# Core aliases
alias la = ls -la
alias ll = ls -l

{{- if lookPath "eza" }}
alias ls = eza --icons=auto --git
alias la = eza -la --icons=auto --git  
alias ll = eza -l --icons=auto --git
alias tree = eza --tree --icons=auto
{{- end }}

{{- if lookPath "bat" }}
alias cat = bat
{{- end }}

{{- if lookPath "delta" }}
alias diff = delta
{{- end }}

# Utility aliases
alias q = exit
alias ":q" = exit
{{- if lookPath "pbcopy" }}
alias cb = pbcopy
{{- else if lookPath "xclip" }}
alias cb = xclip -selection clipboard
{{- end }}

{{- if lookPath "emacsclient" }}
alias ec = emacsclient -nw
alias ecc = emacsclient -c -n
{{- end }}

# Utility functions
def rscp [source: path, destination: path] {
    rsync -avhzP --stats $source $destination
}

{{- if lookPath "bunx" }}
def ccusage [...args] {
    bunx ccusage ...$args
}
{{- end }}

# Television (tv) integration
{{- if lookPath "tv" }}
def --env tcd [] {
    let result = (tv)
    if ($result | is-not-empty) {
        cd $result
    }
}

$env.config = ($env.config | upsert keybindings ($env.config.keybindings | append {
    name: television_cd
    modifier: alt
    keycode: char_c
    mode: [emacs, vi_normal, vi_insert]
    event: { send: executehostcommand cmd: "tcd" }
}))
{{- end }}

# Load custom scripts from nushell config directory
{{- $gitShortcuts := joinPath .chezmoi.homeDir ".config/nushell/scripts/git-shortcuts.nu" }}
{{- if stat $gitShortcuts }}
source "{{ $gitShortcuts }}"
{{- end }}

{{- $ezaAliases := joinPath .chezmoi.homeDir ".config/nushell/scripts/eza-aliases.nu" }}
{{- if stat $ezaAliases }}
source "{{ $ezaAliases }}"
{{- end }}

# Load Catppuccin theme (downloaded via .chezmoiexternal.toml)
{{- $catppuccinTheme := joinPath .chezmoi.homeDir ".config/nushell/themes/catppuccin_frappe.nu" }}
{{- if stat $catppuccinTheme }}
source "{{ $catppuccinTheme }}"
{{- end }}