# Nushell Login Shell Configuration
# This file is loaded when nushell is started as a login shell
# See https://www.nushell.sh/book/configuration.html

{{- if lookPath "mise" }}
# Ensure mise shims are available in login shells
let mise_config_dir = $nu.default-config-dir
let mise_shim_file = ($mise_config_dir | path join "mise-path.nu")
if (path exists $mise_shim_file) {
    source-env $mise_shim_file
}
{{- end }}

# Login shell specific environment variables
# These will be inherited by all subprocesses

# Language and locale settings
$env.LANG = "en_US.UTF-8"
$env.LC_ALL = "en_US.UTF-8"

# SSH Agent
{{- if eq .chezmoi.os "linux" }}
# Start SSH agent if not already running on Linux
if (not ($env | get SSH_AUTH_SOCK? | is-empty)) {
    # SSH agent is already running
} else {
    # Start a new SSH agent
    let ssh_agent_output = (ssh-agent -s | lines)
    for line in $ssh_agent_output {
        if ($line | str contains "SSH_AUTH_SOCK=") {
            let parts = ($line | split row ';' | get 0 | split row '=')
            $env.SSH_AUTH_SOCK = ($parts | get 1)
        } else if ($line | str contains "SSH_AGENT_PID=") {
            let parts = ($line | split row ';' | get 0 | split row '=')
            $env.SSH_AGENT_PID = ($parts | get 1)
        }
    }
}
{{- end }}

# 1Password SSH Agent
{{- if not .skip1Password }}
{{- if eq .chezmoi.os "darwin" }}
$env.SSH_AUTH_SOCK = "{{ .chezmoi.homeDir }}/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
{{- else if eq .chezmoi.os "linux" }}
$env.SSH_AUTH_SOCK = "{{ .chezmoi.homeDir }}/.1password/agent.sock"
{{- end }}
{{- end }}

{{- if eq .chezmoi.os "darwin" }}
if (($env.__SSH_KEYCHAIN_LOADED? | default "") | is-empty) {
    if (which ssh-add | length) > 0 {
        try { ssh-add --apple-load-keychain | ignore } catch { }
    }
    $env.__SSH_KEYCHAIN_LOADED = "1"
}
{{- end }}

# GPG Configuration
{{- if lookPath "gpg" }}
$env.GPG_TTY = (tty)
{{- end }}

# Development environment variables
{{- if eq .chezmoi.os "darwin" }}
# macOS specific development settings
$env.MACOSX_DEPLOYMENT_TARGET = "11.0"
{{- end }}

# Terminal capabilities
if ($env.TERM? | is-empty) or ($env.TERM == "dumb") {
    $env.TERM = "xterm-256color"
}

# Machine-specific login configuration
{{- $localLogin := joinPath .paths.configDir "nushell/login.local.nu" }}
{{- if stat $localLogin }}
source "{{ $localLogin }}"
{{- else }}
# Note: To add local config, create {{ $localLogin }}
{{- end }}
