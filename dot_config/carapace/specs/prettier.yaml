# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: prettier
description: Opinionated code formatter
flags:
  # Output options
  -c, --check: Check if files are formatted
  -l, --list-different: Print names of files that are different
  -w, --write: Edit files in-place
  # Format options
  --arrow-parens=: Include parentheses around a sole arrow function parameter
  --bracket-same-line: Put > of opening tags on the last line
  --no-bracket-spacing: Do not print spaces between brackets
  --embedded-language-formatting=: Control how Prettier formats quoted code
  --end-of-line=: Which end of line characters to apply
  --experimental-operator-position=: Where to print operators when binary expressions wrap
  --no-experimental-ternaries: Default behavior of ternaries
  --html-whitespace-sensitivity=: How to handle whitespaces in HTML
  --jsx-single-quote: Use single quotes in JSX
  --object-wrap=: How to wrap object literals
  --parser=: Which parser to use
  --print-width=: The line length where Prettier will try wrap
  --prose-wrap=: How to wrap prose
  --quote-props=: Change when properties in objects are quoted
  --no-semi: Do not print semicolons
  --single-attribute-per-line: Enforce single attribute per line
  --single-quote: Use single quotes instead of double quotes
  --tab-width=: Number of spaces per indentation level
  --trailing-comma=: Print trailing commas wherever possible
  --use-tabs: Indent with tabs instead of spaces
  --vue-indent-script-and-style: Indent script and style tags in Vue files
  # Config options
  --config=: Path to a Prettier configuration file
  --no-config: Do not look for a configuration file
  --config-precedence=: Define config files and CLI options evaluation order
  --no-editorconfig: Don't take .editorconfig into account
  --find-config-path=: Find and print the path to a configuration file
  --ignore-path=: Path to a file with patterns describing files to ignore
  --plugin=: Add a plugin
  # Other options
  --cache: Only format changed files
  --cache-location=: Path to the cache file
  --cache-strategy=: Strategy for the cache to use
  --check-ignore-pragma: Check for @noprettier or @noformat
  --no-color: Do not colorize error messages
  --no-error-on-unmatched-pattern: Prevent errors when pattern is unmatched
  --file-info=: Extract info for a given file path
  -h, --help?: Show CLI usage, or details about the given flag
  -u, --ignore-unknown: Ignore unknown files
  --insert-pragma: Insert @format pragma into file's first docblock comment
  --log-level=: What level of logs to report
  --require-pragma: Require @prettier or @format to be present
  --stdin-filepath=: Path to the file to pretend that stdin comes from
  --support-info: Print support information as JSON
  -v, --version: Print Prettier version
completion:
  flag:
    arrow-parens: ["always", "avoid"]
    embedded-language-formatting: ["auto", "off"]
    end-of-line: ["lf", "crlf", "cr", "auto"]
    experimental-operator-position: ["start", "end"]
    html-whitespace-sensitivity: ["css", "strict", "ignore"]
    object-wrap: ["preserve", "collapse"]
    parser: ["flow", "babel", "babel-flow", "babel-ts", "typescript", "acorn", "espree", "meriyah", "css", "less", "scss", "json", "json5", "jsonc", "json-stringify", "graphql", "markdown", "mdx", "vue", "yaml", "glimmer", "html", "angular", "lwc", "mjml"]
    prose-wrap: ["always", "never", "preserve"]
    quote-props: ["as-needed", "consistent", "preserve"]
    trailing-comma: ["all", "es5", "none"]
    config-precedence: ["cli-override", "file-override", "prefer-file"]
    cache-strategy: ["metadata", "content"]
    log-level: ["silent", "error", "warn", "log", "debug"]
  positional:
    - ["$files", "$directories"]