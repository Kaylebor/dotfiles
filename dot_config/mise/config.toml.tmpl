[tools]
ruby = "3"
node = "latest"
go = "latest"
python = "latest"
java = "graalvm-community-23"
elixir = "latest"
erlang = "latest"
rust = { version = "stable", components = "rust-analyzer" }
deno = "latest"
bun = "latest"
pipx = "latest"
uv = "latest"
{{- if (eq .chezmoi.os "linux") }}
protonge = "GE-Proton10-4"
{{- end }}
"cargo:mdopen" = "latest"
"cargo:emacs-lsp-booster" = "latest"
"go:github.com/chrishrb/go-grip" = "latest"
"go:github.com/cweill/gotests/gotests" = "latest"
"go:github.com/evilmartians/lefthook" = "latest"
"go:github.com/fatih/gomodifytags" = "latest"
"go:github.com/jessfraz/dockfmt" = "latest"
"go:github.com/stamblerre/gocode" = "latest"
"go:github.com/x-motemen/gore/cmd/gore" = "latest"
"go:golang.org/x/tools/cmd/goimports" = "latest"
"go:golang.org/x/tools/gopls" = "latest"
"go:honnef.co/go/tools/cmd/staticcheck" = "latest"
"go:mvdan.cc/sh/v3/cmd/shfmt" = "latest"
"npm:@anthropic-ai/claude-code" = "latest"
"npm:@google/gemini-cli" = "latest"
"npm:@github/copilot-language-server" = "latest"
"npm:clipboard-cli" = "latest"
"npm:nx" = "latest"
"npm:typescript-language-server" = "latest"
"npm:vscode-langservers-extracted" = "latest"
"pipx:aider-chat" = { version = "latest", uvx_args = "--force --python python3.12" }

[settings]
experimental = true
idiomatic_version_file_enable_tools = ["ruby"]

[env]
{{- if and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.idLike "arch") }}
KERL_CONFIGURE_OPTIONS="--with-odbc=/var/lib/pacman/local/unixodbc-{{ output "pacman" "-Q" "unixodbc" | trim | splitList " " | last }}"
{{- end }}
{{- if (eq .chezmoi.os "darwin") }}
{{- $brewPrefix := "" }}
{{- if eq .homebrewInstallType "alternative" }}
{{-   if stat (joinPath .chezmoi.homeDir .homebrewPath) }}
{{-     $brewPrefix = joinPath .chezmoi.homeDir .homebrewPath }}
{{-   end }}
{{- else }}
{{-   if stat "/opt/homebrew" }}
{{-     $brewPrefix = "/opt/homebrew" }}
{{-   else if stat "/usr/local/Homebrew" }}
{{-     $brewPrefix = "/usr/local" }}
{{-   end }}
{{- end }}
{{- if $brewPrefix }}
LDFLAGS="{{ "{{get_env(name='LDFLAGS', default='')}}" }} -L{{ joinPath $brewPrefix "opt" "llvm" "lib" }} -L{{ joinPath $brewPrefix "opt" "openblas" "lib" }} -L{{ joinPath $brewPrefix "opt" "lapack" "lib" }} -L{{ joinPath $brewPrefix "opt" "libpq" "lib" }}"
PKG_CONFIG_PATH="{{ "{{get_env(name='PKG_CONFIG_PATH', default='')}}" }}:{{ joinPath $brewPrefix "opt" "openblas" "lib" "pkgconfig" }}:{{ joinPath $brewPrefix "opt" "lapack" "lib" "pkgconfig" }}:{{ joinPath $brewPrefix "opt" "libpq" "lib" "pkgconfig" }}:{{ joinPath $brewPrefix "opt" "imagemagick@6" "lib" "pkgconfig" }}"
LAPACK="{{- first (glob (joinPath $brewPrefix "opt" "lapack" "lib" "liblapack*.dylib")) }}"
BLAS="{{- first (glob (joinPath $brewPrefix "opt" "openblas" "lib" "libopenblasp-r*.dylib")) }}"
{{- end }}
## tell compiler not to error out for implicit function declarations
CFLAGS="-Wno-error=implicit-function-declaration"
## Ruby-specific environment variables for alternative Homebrew
CC="/usr/bin/clang"
CXX="/usr/bin/clang++"
CPLUS_INCLUDE_PATH="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1"
C_INCLUDE_PATH="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include"
USE_IMAGEMAGICK_6="1"
{{- end }}

