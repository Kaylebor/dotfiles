#!/bin/bash

# Claude Code Detection and Environment Setup
# Claude Code sets CLAUDECODE=1 but doesn't source .profile
# We need to ensure mise is properly initialized for Claude Code's Bash tool
if [[ -n "$CLAUDECODE" ]]; then
    # Running in Claude Code - ensure mise is fully activated
    # Source .profile functionality since Claude Code doesn't source it
    if [[ -z "$__MISE_ACTIVATED" ]]; then
        eval "$(mise activate bash)"
        export __MISE_ACTIVATED=1
    fi
fi

# Ensure mise is activated for interactive shells
if [[ -z "$__MISE_ACTIVATED" ]]; then
    eval "$(mise activate bash)"
    export __MISE_ACTIVATED=1
fi


{{- if lookPath "tv" }}
# Integrate Television
eval "$(tv init bash)"
{{- end }}

{{- if lookPath "carapace" }}
# Load carapace completions
# It includes completions for: aws, gcloud, docker, git, kubectl, terraform, and more
export CARAPACE_BRIDGES='zsh,fish,bash'
source <(carapace _carapace bash)
{{- end }}

{{- if lookPath "bat" }}
# Bat as man pager
export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"
{{- end }}


{{- if stat (joinPath .paths.configDir "op" "plugins.sh") }}
source {{ .paths.configDir }}/op/plugins.sh
{{- end }}

# Emacs vterm helper function
vterm_printf() {
    if [ -n "$TMUX" ] \
        && { [ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]; }; then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

{{- if and .useLlamaSwap .enableLlamaSwapEnv }}
# Configure qwen-code for llama-swap (only when explicitly enabled)
export OPENAI_BASE_URL="{{ .llamaSwapApiBase }}"
export OPENAI_API_KEY="dummy"
export OPENAI_MODEL="qwen3coder-a3b-q4-16l-256k-kq8fa"
{{- end }}

# Set up aliases
[[ $- == *i* ]] && source $HOME/.config/zsh/aliases.zsh

# Machine-specific bash configuration
{{- if stat (joinPath .paths.configDir "bash" ".bashrc.local") }}
source {{ .paths.configDir }}/bash/.bashrc.local
{{- else }}
# Note: To add local config, create $HOME/.config/bash/.bashrc.local
{{- end }}
