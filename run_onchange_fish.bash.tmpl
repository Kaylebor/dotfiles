#!/usr/bin/env bash
{{- if lookPath "fish" }}
# hash: {{ include "dot_config/carapace/bridges.yaml" | sha256sum }}
{{- range (glob "dot_config/carapace/specs/*.yaml") }}
# hash: {{ include . | sha256sum }}
{{- end }}
# hash: {{ include "dot_config/fish/fish_plugins" | sha256sum }}
# hash: {{ include ".fish_env.fish" | sha256sum }}

{{/* Version management */}}
{{- if lookPath "mise" }}
# Activate mise
echo 'if status --is-interactive' > ~/.config/fish/conf.d/mise.fish
mise activate fish >> ~/.config/fish/conf.d/mise.fish
echo 'end' >> ~/.config/fish/conf.d/mise.fish
{{- end }}

{{/* Completions via Carapace */}}
{{- if lookPath "carapace" }}
# Source carapace into .config/fish/conf.d
carapace _carapace fish > ~/.config/fish/conf.d/carapace.fish
{{- end }}


{{/* Television integration */}}
{{- if lookPath "tv" }}
# Integrate Television
tv init fish > ~/.config/fish/conf.d/television.fish
{{- end }}

# Run the fish environment setup
fish -c "source {{ .chezmoi.sourceDir }}/.fish_env.fish"

{{- if and .useLlamaSwap .enableLlamaSwapEnv }}
# Configure qwen-code for llama-swap (only when explicitly enabled)
fish -c "set -Ux OPENAI_BASE_URL '{{ .llamaSwapApiBase }}'"
fish -c "set -Ux OPENAI_API_KEY 'dummy'"
fish -c "set -Ux OPENAI_MODEL 'qwen3coder-a3b-q4-16l-256k-kq8fa'"
{{- else }}
# Ensure OpenAI variables are unset by default
# Use -Ue to erase universal variables if they exist
fish -c "set -Ue OPENAI_BASE_URL 2>/dev/null; true"
fish -c "set -Ue OPENAI_API_KEY 2>/dev/null; true"
fish -c "set -Ue OPENAI_MODEL 2>/dev/null; true"
{{- end }}

{{- if and (hasKey . "homebrewPaths") (hasKey . "brewBin") .brewBin (stat .brewBin) }}
# Set Homebrew Cask options for consistent app directory installation
fish -c "set -Ux HOMEBREW_CASK_OPTS '--appdir={{ .homebrewPaths.applicationsPath }}'"
{{- end }}

{{- if eq .chezmoi.os "darwin" }}
# MacOS-specific variable configuration
{{- if and (hasKey . "brewBin") .brewBin }}
fish -l -c "fish_add_path -Uam ({{ .brewBin }} --prefix sqlite)/bin"
{{- end }}
{{- end }}

{{- if and (lookPath "lima") (not (lookPath "nerdctl")) }}
# Create nerdctl function when lima is present but nerdctl is not
cat > ~/.config/fish/functions/nerdctl.fish << 'EOF'
function nerdctl --description 'alias nerdctl lima nerdctl'
  lima nerdctl $argv
end
EOF
{{- end }}

{{- end }}
