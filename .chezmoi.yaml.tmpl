{{- $homebrewInstallType := "" }}
{{- $homebrewPath := "" }}
{{- if eq .chezmoi.os "darwin" }}
{{-   if hasKey . "homebrewInstallType" }}
{{-     $homebrewInstallType = .homebrewInstallType }}
{{-   else }}
{{-     $homebrewInstallType = promptChoice "How would you like to install Homebrew on this Mac?" (list "standard" "alternative") }}
{{-   end }}
{{-   if eq $homebrewInstallType "alternative" }}
{{-     if hasKey . "homebrewPath" }}
{{-       $homebrewPath = .homebrewPath }}
{{-     else }}
{{-       $homebrewPath = promptString "Enter the homebrew installation path (relative to home directory)" ".homebrew" }}
{{-     end }}
{{-   end }}
{{- end }}

{{- $skip1Password := false }}
{{- if hasKey . "skip1Password" }}
{{-   $skip1Password = .skip1Password }}
{{- else if env "CHEZMOI_SKIP_1PASSWORD" }}
{{-   $skip1Password = true }}
{{- else }}
{{-   $skip1Password = false }}
{{- end }}

{{- $signingKey := "" }}
{{- if $skip1Password }}
{{- $signingKey = promptString "Enter the signing key path" (print .chezmoi.homeDir "/.ssh/id_ed25519") }}
{{- end }}

{{- $prewarmRubyLSP := false }}
{{- if hasKey . "prewarmRubyLSP" }}
{{-   $prewarmRubyLSP = .prewarmRubyLSP }}
{{- else }}
{{-   $prewarmRubyLSP = promptBool "Prewarm Ruby LSP on Emacs startup? (recommended for work machines)" false }}
{{- end }}

{{- $ollamaHost := "localhost:11434" }}
{{- if hasKey . "ollamaHost" }}
{{-   $ollamaHost = .ollamaHost }}
{{- else }}
{{-   $ollamaHost = promptString "Ollama host (use 'localhost:11434' for local, or hostname:port for remote)" "localhost:11434" }}
{{- end }}

{{- $pullOllamaModels := false }}
{{- if eq $ollamaHost "localhost:11434" }}
{{-   if hasKey . "pullOllamaModels" }}
{{-     $pullOllamaModels = .pullOllamaModels }}
{{-   else }}
{{-     $pullOllamaModels = promptBool "Pull Ollama models for local development?" false }}
{{-   end }}
{{- end }}

{{- $useLlamaSwap := false }}
{{- if hasKey . "useLlamaSwap" }}
{{-   $useLlamaSwap = .useLlamaSwap }}
{{- else }}
{{-   $useLlamaSwap = promptBool "Use llama-swap for Aider instead of cloud models?" false }}
{{- end }}

{{- $llamaSwapApiBase := "http://localhost:8080/v1" }}
{{- if $useLlamaSwap }}
{{-   if hasKey . "llamaSwapApiBase" }}
{{-     $llamaSwapApiBase = .llamaSwapApiBase }}
{{-   else }}
{{-     $llamaSwapApiBase = promptString "Enter llama-swap API base URL" "http://localhost:8080/v1" }}
{{-   end }}
{{- end }}

{{- $modalEditingMode := "evil" }}
{{- if hasKey . "modalEditingMode" }}
{{-   $modalEditingMode = .modalEditingMode }}
{{- else }}
{{-   $modalEditingMode = promptChoice "Which modal editing system for Emacs?" (list "evil" "meow" "none") }}
{{- end }}

{{- $preferredShell := "/bin/sh" }}
{{- if lookPath "fish" }}
{{-   $preferredShell = lookPath "fish" }}
{{- else if lookPath "zsh" }}
{{-   $preferredShell = lookPath "zsh" }}
{{- else if lookPath "bash" }}
{{-   $preferredShell = lookPath "bash" }}
{{- end }}

data:
{{- if eq .chezmoi.os "darwin" }}
  homebrewInstallType: {{ $homebrewInstallType | quote }}
{{-   if eq $homebrewInstallType "alternative" }}
  homebrewPath: {{ $homebrewPath | quote }}
{{-   end }}
{{-   $brewBin := "" }}
{{-   if lookPath "brew" }}
{{-     $brewBin = lookPath "brew" }}
{{-   else if eq $homebrewInstallType "alternative" }}
{{-     $brewBin = printf "%s/%s/bin/brew" .chezmoi.homeDir $homebrewPath }}
{{-   else }}
{{-     $brewBin = "/opt/homebrew/bin/brew" }}
{{-   end }}
  brewBin: {{ $brewBin | quote }}
{{- end }}
  skip1Password: {{ $skip1Password }}
  signingKey: {{ $signingKey }}
  prewarmRubyLSP: {{ $prewarmRubyLSP }}
  ollamaHost: {{ $ollamaHost | quote }}
  ollamaApiBase: {{ printf "http://%s" $ollamaHost | quote }}
  pullOllamaModels: {{ $pullOllamaModels }}
  useLlamaSwap: {{ $useLlamaSwap }}
  llamaSwapApiBase: {{ $llamaSwapApiBase | quote }}
  modalEditingMode: {{ $modalEditingMode | quote }}
  preferredShell: {{ $preferredShell | quote }}
  # Precalculated common paths
  paths:
    localBin: {{ joinPath .chezmoi.homeDir ".local" "bin" | quote }}
    localShare: {{ joinPath .chezmoi.homeDir ".local" "share" | quote }}
    configDir: {{ joinPath .chezmoi.homeDir ".config" | quote }}
    binDir: {{ joinPath .chezmoi.homeDir "bin" | quote }}
    bunBin: {{ joinPath .chezmoi.homeDir ".bun" "bin" | quote }}
    denoBin: {{ joinPath .chezmoi.homeDir ".deno" "bin" | quote }}
    mixEscripts: {{ joinPath .chezmoi.homeDir ".mix" "escripts" | quote }}
    rdBin: {{ joinPath .chezmoi.homeDir ".rd" "bin" | quote }}
    yabridge: {{ joinPath .chezmoi.homeDir ".local" "share" "yabridge" | quote }}
    cacheDir: {{ joinPath .chezmoi.homeDir ".cache" | quote }}
    nushellVendorAutoload: {{ joinPath .chezmoi.homeDir ".local" "share" "nushell" "vendor" "autoload" | quote }}
    nushellScripts: {{ joinPath .chezmoi.homeDir ".config" "nushell" "scripts" | quote }}
    nushellThemes: {{ joinPath .chezmoi.homeDir ".config" "nushell" "themes" | quote }}
{{- if and (eq .chezmoi.os "darwin") (eq $homebrewInstallType "alternative") }}
  # Alternative Homebrew paths
  homebrewPaths:
    base: {{ joinPath .chezmoi.homeDir $homebrewPath | quote }}
    applicationsPath: {{ joinPath .chezmoi.homeDir "Applications" | quote }}
    gccBase: {{ joinPath .chezmoi.homeDir $homebrewPath "opt" "gcc" | quote }}
    gccLib: {{ joinPath .chezmoi.homeDir $homebrewPath "opt" "gcc" "lib" "gcc" "current" | quote }}
    gccInclude: {{ joinPath .chezmoi.homeDir $homebrewPath "opt" "gcc" "include" | quote }}
    gccCppInclude: {{ joinPath .chezmoi.homeDir $homebrewPath "opt" "gcc" "include" "c++" "15" | quote }}
    gccBin: {{ joinPath .chezmoi.homeDir $homebrewPath "bin" "gcc-15" | quote }}
{{- else if eq .chezmoi.os "darwin" }}
  # Standard Homebrew paths
  homebrewPaths:
    applicationsPath: "/Applications"
{{- end }}
